---
title: "workflow"
output: html_document
date: "2022-10-31"
---

```{r}
library(readxl)
library(tidyverse)
library(dplyr)
```

## Workflow

About the datasheet:
Each sheet is an hour. (I've only put 10).

I am interested in 'mean of each column'. Ex: mean_Ta_ex, mean_RH_ex, mean_WS_ex etc.

```{r}
data <- read_excel("re-sized datasheet.xlsx", sheet = "00")
```

I should look at Ta values of each scenario (colored in green in the excel for filtering).
If, either one value is -999 from columns 3, 12, 21, 30 and 39, I want to remove that whole row (colored in yellow in the excel).
(maybe assigning NA to them)

This is the code I've tried, using google, and from what you've taught in the workshop (which has errors and you said, not to use loops)

```{r}
#in_or_out <- rep(1:6053)
#for (i in 1:6053){
#  if (data[i, 3] = -999 | data[i,12] = -999 | data[i,21] = -999 | #data[i,30] = -999 | data[i,39] = -999)
#    then (in_or_out[i] <- NA)
#}

# TN: Here is a more elegant way to create this dataset:
in_or_out <- data %>%
 mutate(across(everything(), ~ifelse(.x == -999, NA, .x))) %>%
  na.omit()
#in_or_out %>% filter(data, data$Ta_ex = NA & data$Ta_bpn = NA, data$Ta_bps & data$Ta_ppa = NA, data$Ta_ppb = NA)
```

TN: you need to create a new data set and give it a name.
```{r}
in_or_out_long  <- in_or_out %>% 
  pivot_longer(cols = -c(1:2),
               names_to = c("variable","scenario"),
               names_sep = '_',
               values_to = "data")
```

TN: when one piece of code isn't working, separate out into different R chunks. Each chunk can be a separate command. 

I changed mean(value) to mean(data) since "data" is the name
of the column you want to summarise.
```{r}  
in_or_out_means <- in_or_out_long %>%
  group_by(variable,scenario) %>%
  summarise(value = mean(data, na.rm = TRUE))

in_or_out_means
```

After having the column mean at the end of the sheet like this: 
0:00	30.22433056	22.88888889	0.212582	46.39830461	26.353872	31.818799	-30.27777778	10.23661356	0	30.30740039	23.16666667	0.670328833	44.3187875	25.77777956	30.58718306	-24.83333333	8.244155778	0.139706833	30.22222656	22.38888889	0.210209611	46.40893072	26.30064728	31.81240906	-30.27777778	10.17766394	0	30.15722644	22.11111111	0.182239944	45.76729011	26.26254367	31.77310694	-30.38888889	10.55200433	0	30.22905661	22.5	0.857998056	44.67374128	25.42311567	30.75745	-27.22222222	10.28144544	0.150039667


I wanna do the same for each sheet (for each hour), and this is the reason I thought to use a for loop (might be a stupid decision :)

Finally,
get the column average for 00:00 - 23:00 (24 hours)


TN: Here is a shorter way to do this:
```{r}
data_no999 <- data %>%
 mutate(across(everything(), ~ifelse(.x == -999, NA, .x))) %>%
  na.omit()
```

